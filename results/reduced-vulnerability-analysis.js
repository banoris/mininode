const fs = require('fs');
const readline = require('readline');
const jfs = require('jsonfile');
const argv = require('yargs').argv;

if (!argv.file) {
    console.error('--file is required');
    process.exit(1);
}


let liner = readline.createInterface({
    input: fs.createReadStream(argv.file, {encoding: 'utf8'})
});

let count = 0;
let result = {}
liner.on('line', function(line) {
    let doc = JSON.parse(line);
    console.log(count++, doc.path);
    let reducedDependencies = doc.reducedVulnerabilities;
    // remove duplicates
    for (const red of reducedDependencies) {
        if (!Object.prototype.hasOwnProperty.call(result, red.category)) {
            result[red.category] = {
                total: 0,
                high: 0,
                medium: 0,
                low: 0
            }
        }
        if (red.severity === 'H') result[red.category].high++;
        else if (red.severity === 'M') result[red.category].medium++;
        else result[red.category].low++;
        result[red.category].total++;
    }
});
liner.on('close', ()=>{
    let csv = "name,total,high,medium,low\n";
    for (const key in result) {
        if (result.hasOwnProperty(key)) {
            const element = result[key];
            csv += key + ',' + element.total + ',' + element.high + ',' + element.medium + ',' + element.low + '\n'
        }
    }
    fs.writeFileSync(`data/${argv.out}.csv`, csv, {encoding:'utf8'});
    jfs.writeFileSync(`data/${argv.out}.json`, result, {spaces: 2});
})